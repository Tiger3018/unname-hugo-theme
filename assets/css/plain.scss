@import "../_bootstrap/scss/bootstrap";

/*@media (prefers-color-scheme: dark) {
  $navbar-light-color:                 rgba($white, .55) ;
  $navbar-light-hover-color:           rgba($white, .75) ;
  $navbar-light-active-color:          $white ;
  $navbar-light-disabled-color:        rgba($white, .25) ;
  $navbar-light-toggler-icon-bg:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'><path stroke='#{$navbar-dark-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>") ;
  $navbar-light-toggler-border-color:  rgba($white, .1) ;

  $navbar-light-brand-color:                $navbar-light-active-color ;
  $navbar-light-brand-hover-color:          $navbar-light-active-color ;
  $colors: (
    "white": $gray-600
  ) ;
  $theme-colors: (
    "light": $dark,
    "dark": $light
  );
  $color-contrast-light:      $gray-900 ;
  $color-contrast-dark:     $white ;
  @import "../bootstrap/scss/nav";
  @import "../bootstrap/scss/navbar";
  @import "../bootstrap/scss/card";

  @each $breakpoint in map-keys($grid-breakpoints) {

    // Generate media query if needed
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      // Loop over each utility property
      @each $key, $utility in $utilities {
        // The utility can be disabled with `false`, thus check if the utility is a map first
        // Only proceed if responsive media queries are enabled or if it's the base media query
        @if type-of($utility) == "map" and (map-get($utility, responsive) or $infix == "") {
          @include generate-utility($utility, $infix);
        }
      }
    }
  }
}*/

// the navigation part start
#header[data-visit = "false"] {
  background-color: $white !important;
  box-shadow: none !important;
}
#header[data-visit = "false"] .navbar-brand > img {
  height: 60px;
}
.la-tran-js, .la-tran-js .navbar-brand > img {
  transition-duration: .6s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.holder-svg {
  text-anchor: middle;
  user-select: none;
}

footer {
  background-color: $gray-300;
}
footer > hr:first-child {
  color: $gray-600;
  box-shadow: 1px -0.15rem 7px 0.05em $gray-600;
}
//the navigation part end

//the article part strat
pre {
  padding: .8rem;
  padding-left: 1.2rem;
  padding-right: 1.2rem;
}
//the article part end

.la-dark-only {
  display: none ;
}
@media (prefers-color-scheme: dark){
  .la-light-only {
    display: none;
  }
  .la-dark-only {
    display: inherit;
  }
}
.max-vw-100 {
  max-width: 100vw !important;
}
/*
@import "../bootstrap/scss/functions";
@import "../bootstrap/scss/variables";
@import "../bootstrap/scss/mixins";
@import "../bootstrap/scss/utilities";


// Optional
@import "../bootstrap/scss/reboot";
@import "../bootstrap/scss/type";
@import "../bootstrap/scss/images";
@import "../bootstrap/scss/grid";
@import "../bootstrap/scss/nav";
@import "../bootstrap/scss/navbar";
@import "../bootstrap/scss/nav";
*/
